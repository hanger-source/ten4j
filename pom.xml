<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>source.hanger</groupId>
    <artifactId>ten4j</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>ten4j</name>
    <description>Java implementation of TEN Framework real-time dialogue engine</description>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 版本管理 -->
        <netty.version>4.1.116.Final</netty.version> <!-- 升级版本 -->
        <agrona.version>2.2.4</agrona.version>
        <jackson.version>2.18.4</jackson.version> <!-- 使用最新的 Jackson 版本 -->
        <fasterxml.uuid.version>5.1.0</fasterxml.uuid.version>
        <spring.version>6.2.1</spring.version>
        <slf4j.version>2.0.16</slf4j.version>
        <logback.version>1.5.12</logback.version>
        <msgpack.version>0.9.10</msgpack.version> <!-- 使用最新的 MsgPack 版本 -->
        <junit.version>5.11.3</junit.version>
        <mockito.version>5.3.1</mockito.version>
        <micrometer.version>1.15.3</micrometer.version>
        <lombok.version>1.18.38</lombok.version> <!-- 使用最新的 Lombok 版本 -->
        <dashscope.version>2.20.9</dashscope.version>
        <gson.version>2.10.1</gson.version>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <mvel2.version>2.5.0.Final</mvel2.version>
        <reactor-core.version>3.5.17</reactor-core.version>
        <okhttp.version>4.12.0</okhttp.version>
        <dropwizard.metrics.version>4.2.25</dropwizard.metrics.version>
        <jemoji.version>1.7.4</jemoji.version>
        <junit-jupiter.version>5.10.0</junit-jupiter.version>
        <mockito.version>5.3.1</mockito.version>
        <maven-shade-plugin.version>3.5.3</maven-shade-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <commons-pool2.version>2.12.0</commons-pool2.version> <!-- 添加 commons-pool2 版本 -->
        <jna.version>5.14.0</jna.version> <!-- JNA 版本 -->
    </properties>

    <modules>
        <module>ten4j-core</module>
        <module>ten4j-server</module>
        <module>ten4j-agent</module>
        <module>ten4j-extension-builtin</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Netty 网络框架 -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 尝试引入netty-all以确保所有模块都可用 -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- Agrona 高性能并发数据结构 -->
            <dependency>
                <groupId>org.agrona</groupId>
                <artifactId>agrona</artifactId>
                <version>${agrona.version}</version>
            </dependency>

            <!-- Jackson JSON 处理 -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.fasterxml.uuid/java-uuid-generator -->
            <dependency>
                <groupId>com.fasterxml.uuid</groupId>
                <artifactId>java-uuid-generator</artifactId>
                <version>${fasterxml.uuid.version}</version>
            </dependency>

            <!-- 日志框架 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- MsgPack 序列化 -->
            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>msgpack-core</artifactId>
                <version>${msgpack.version}</version>
            </dependency>
            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>jackson-dataformat-msgpack</artifactId>
                <version>${msgpack.version}</version>
            </dependency>

            <!-- 监控指标 -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>

            <!-- Lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.10.2</version>
            </dependency>

            <!-- DashScope SDK -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dashscope-sdk-java</artifactId>
                <version>${dashscope.version}</version>
            </dependency>
            <!-- Gson for JSON handling -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- Apache Commons Lang3 for string utilities -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- Apache Commons Collections4 for collection utilities -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <!-- MVEL Expression Language -->
            <dependency>
                <groupId>org.mvel</groupId>
                <artifactId>mvel2</artifactId>
                <version>${mvel2.version}</version>
            </dependency>

            <!-- Project Reactor for reactive programming -->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor-core.version}</version>
            </dependency>

            <!-- OkHttp for HTTP requests -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp-sse</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <!-- Dropwizard Metrics -->
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-healthchecks</artifactId>
                <version>${dropwizard.metrics.version}</version>
            </dependency>

            <!-- JEmoji for Emoji processing -->
            <dependency>
                <groupId>net.fellbaum</groupId>
                <artifactId>jemoji</artifactId>
                <version>${jemoji.version}</version>
            </dependency>


            <!-- 测试依赖 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- SLF4J Simple Implementation for tests -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Apache Commons Pool2 for object pooling -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>

            <!-- JNA Core -->
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <!-- JNA Platform (可选，提供更多平台特定功能) -->
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform</artifactId>
                <version>${jna.version}</version>
            </dependency>

            <dependency>
                <groupId>source.hanger</groupId>
                <artifactId>dfnet-java</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <source>21</source>
                        <target>21</target>
                        <release>21</release>
                        <compilerArgs>
                            <arg>--enable-preview</arg> <!-- 重新启用预览功能 -->
                            <arg>--add-opens</arg>
                            <arg>java.base/jdk.internal.misc=ALL-UNNAMED</arg>
                            <arg>--add-opens</arg>
                            <arg>java.base/java.util.zip=ALL-UNNAMED</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>--enable-preview --add-opens
                            java.base/jdk.internal.misc=ALL-UNNAMED --add-opens
                            java.base/java.util.zip=ALL-UNNAMED
                        </argLine>
                        <forkCount>1</forkCount>
                        <reuseForks>false</reuseForks>
                        <testFailureIgnore>true</testFailureIgnore>
                        <trimStackTrace>false</trimStackTrace>
                        <perCoreThreadCount>false</perCoreThreadCount>
                        <threadCount>1</threadCount>
                        <forkedProcessTimeoutInSeconds>15</forkedProcessTimeoutInSeconds>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.4.0</version>
                    <configuration>
                        <configLocation>checkstyle.xml</configLocation>
                        <encoding>UTF-8</encoding>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <linkXRef>false</linkXRef>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>